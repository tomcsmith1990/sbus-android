<component-metadata>
	<name>builtin</name>
	<description>
		This is a pseudo-component definition (not a real component),
		just to illustrate the types and schemas for the built-in SAPs
		which every component has
	</description>
	<keywords></keywords>
	<designer>David Ingram</designer>
	<endpoints>
		<endpoint>
			<name>lookup_schema</name>
			<type>#server</type>
			<message>@txt hashcode</message>
			<response>@txt schema</response>
		</endpoint>
		<endpoint>
			<name>get_metadata</name>
			<type>#server</type>
			<message>"0"</message>
			<response>
				@"cpt_metadata.idl"
				@^component-metadata -
			</response>
		</endpoint>
		<endpoint>
			<name>get_status</name>
			<type>#server</type>
			<message>"0"</message>
			<response>
				@"cpt_status.idl"	
				@^component-state -
			</response>
		</endpoint>
		<endpoint>
			<name>map</name>
			<type>#sink</type>
			<message>
				@map
				{
					txt endpoint
					txt peer_address
					txt peer_endpoint
					txt certificate
				}
			</message>
			<response>!</response>
		</endpoint>
		<endpoint>
			<name>unmap</name>
			<type>#sink</type>
			<message>
				@unmap
				{
					txt endpoint
					[txt peer_address]
					[txt peer_endpoint]
					txt certificate
				}
			</message>
			<response>!</response>
		</endpoint>
		<endpoint>
			<name>divert</name>
			<type>#sink</type>
			<message>
				@divert
				{
					txt endpoint
					txt new_address
					txt new_endpoint
					[txt peer_address]
					[txt peer_endpoint]
					txt certificate
				}
			</message>
			<response>!</response>
		</endpoint>
		<endpoint>
			<name>subscribe</name>
			<type>#sink</type>
			<message>
				@subscribe
				{
					txt endpoint
					txt peer
					txt subscription
					txt topic
				}
			</message>
			<response>!</response>
		</endpoint>
		<endpoint>
			<name>register</name>
			<type>#source</type>
			<message>
				@event
				{
					txt address
					flg arrived
				}
			</message>
			<response>!</response>
		</endpoint>
		<endpoint>
			<name>lookup_cpt</name>
			<type>#client</type>
			<message>
				@"map_constraints.idl"
				@^criteria -
			</message>
			<response>
				@results
				(
					txt address
				)
			</response>
		</endpoint>
		<endpoint>
			<name>lookup_schema</name>
			<type>#server</type>
			<message>@txt hashcode</message>
			<response>@txt schema</response>
		</endpoint>
		<endpoint>
			<name>set_log_level</name>
			<type>#sink</type>
			<message>
				@level
				{
					int log
					int echo
				}
			</message>
			<response>!</response>
		</endpoint>
		<endpoint>
			<name>terminate</name>
			<type>#sink</type>
			<message>"0"</message>
			<response>!</response>
		</endpoint>
		<endpoint>
			<name>lost</name>
			<type>#source</type>
			<message>
				@event
				{
					txt address
					flg arrived
				}
			</message>
			<response>!</response>
		</endpoint>
		<endpoint>
			<name>access_control</name>
			<type>#sink</type>
			<message>
				@event { txt principal_cpt txt principal_inst [txt target_ept] flg authorised}			</message>
			<response>!</response>
		</endpoint>
		<endpoint>
			<name>rdc_privs</name>
			<type>#source</type>
			<message>
				@event{
					txt target_cpt
					txt target_inst
					txt target_address
					txt target_endpt
					txt principal_cpt
					txt principal_inst
					flg add_perm
				}
			</message>
			<response>!</response>
		</endpoint>
		<endpoint>
			<name>dump_privileges</name>
			<type>#server</type>
			<message>"0"</message>
			<response>
   @cpt_privileges
   {
      txt name
      txt instance
      txt address
      endpoints
      (
         endpoint
         {
            txt ep_name
            authorisations
            (
               privilege
               {
                  txt principal
                  txt instance
               }
            )
         }
      )
   }
			</response>
		</endpoint>
	</endpoints>
</component-metadata>
